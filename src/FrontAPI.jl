module FrontAPI
using Oxygen, HTTP



#***********************************************************************
# 相当于go-zero中的 config 目录
#***********************************************************************
const SERVER_CONFIG=Dict(
    "host"=>"localhost",
    "port"=>"8000"
)
const DB_CONFIG=Dict(
    "host"=>"localhost",
    "port"=>"5432",
    "dbname"=>"ai4e-datacenter-postgres",
    "user"=>"ai4e_datacenter",
    "password"=>"dlgcdxlgjzdsys1234"
)
#-----------------------------------------------------------------------
# 到此相当于 config 目录结束
#-----------------------------------------------------------------------

#***********************************************************************
# 相当于go-zero中的 models 目录
#***********************************************************************
include("UserModel.jl")
using .UserModel
#-----------------------------------------------------------------------
# 到此相当于 models 目录结束
#-----------------------------------------------------------------------


#***********************************************************************
# 相当于go-zero中的 svc 目录
#***********************************************************************
function setupconfig(config)
end

function setupserver(config)
end

function setupservicecontext(config)
end
#-----------------------------------------------------------------------
# 到此相当于 svc 目录结束
#-----------------------------------------------------------------------



#***********************************************************************
# 相当于go-zero中的 types 目录
#***********************************************************************
mutable struct UserLoginRequest
    loginname::String
    password::String
end

mutable struct UserLoginResponse
    userid::Int64
    loginname::String
    token::String
end
#-----------------------------------------------------------------------
# 到此相当于 types 目录结束
#-----------------------------------------------------------------------

#***********************************************************************
# 相当于go-zero中的 logic 目录
#***********************************************************************
function UserLoginLogic()
    return "User logged in logic"
end
#-----------------------------------------------------------------------
# 到此相当于 logic 目录结束
#-----------------------------------------------------------------------

#***********************************************************************
# 相当于go-zero中的 routes 目录
#***********************************************************************
function UserLoginHandler(request::HTTP.Request)
    UserLoginLogic()
    return HTTP.Response(200, "User logged in successfully!")
end

function RegisterHandlers()
    Oxygen.route([Oxygen.GET], "/login", UserLoginHandler)
end
#-----------------------------------------------------------------------
# 到此相当于 routes 目录结束
#-----------------------------------------------------------------------

end # module